

model Certificate {
  id String @id @default(ulid())

  // Certificate details
  /// The formal title displayed on the certificate
  title       String // "Certificate of Completion"
  /// Detailed description of the achievement or course content
  description String? // Course/program description

  // Completion info
  /// The actual date when the user completed the requirements
  completedAt DateTime // When they actually finished
  /// The date when the certificate was officially issued
  issuedAt    DateTime @default(now()) // When certificate was issued

  // Verification
  /// Unique identifier for certificate verification and authenticity
  certificateNumber String  @unique // For verification purposes
  /// Whether the certificate is currently valid and recognized
  isValid           Boolean @default(true)

  // What was completed (you'll need these models)
  /// The course that was completed (mutually exclusive with program)
  courseId String?
  course   Course? @relation(fields: [courseId], references: [id])

  /// The program that was completed (mutually exclusive with course)
  programId String?
  program   Program? @relation(fields: [programId], references: [id])

  // Recipient
  /// The user who earned this certificate
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  // Optional: Certificate template/design
  /// The template used to generate this certificate's design
  templateId String?
  template   CertificateTemplate? @relation(fields: [templateId], references: [id])

  // Optional: Digital signature/issuer info
  /// The name of the instructor or organization that issued the certificate
  issuedBy  String? // Instructor/organization name
  /// Digital signature or cryptographic hash for verification
  signature String? // Digital signature or hash

  /// Team-based certificate awards and recognition
  teamCertificates TeamMemberCertificate[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Ensure one certificate per user per course/program
  @@unique([userId, courseId])
  @@unique([userId, programId])
  @@index([userId])
  @@index([certificateNumber])
  @@index([courseId])
  @@index([programId])
}


model CertificateTemplate {
  id       String  @id @default(ulid())
  /// The display name of the certificate template
  name     String
  /// JSON configuration containing design elements, layout, and styling
  design   Json // Template design data
  /// Whether this template is currently available for use
  isActive Boolean @default(true)

  /// All certificates generated using this template
  certificates Certificate[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
